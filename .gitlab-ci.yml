

stages:
  - controllers_lint
  - build
  - deploy

lint:
  stage: controllers_lint
  image: registry.gitlab.3a.pl/3a-pl/phpqa:php7.2
  tags:
    - docker
  script:
    - "phpcs --encoding=UTF8 --standard=PSR2 ${WP_THEME_PATH}/app/*.php"


image: php:7.2-cli

variables:
  ZIP_TEMP_FOLDER_NAME: develop_DEPLOY_TMP
  ZIP_TEMP_FOLDER_NAME_STAGING: staging_DEPLOY_TMP
  ZIP_TEMP_FOLDER_NAME_PROD: prod_DEPLOY_TMP
  SERVER: pfrklimaton@10.10.11.6
  PORT: 22
  SERVER_ROOT_WHERE_DEPLOY_FOLDER_DEV: /var/www/pfrklimaton
  SERVER_FOLDER_NAME_DEV: pfr-klimaton.devel6.3a.pl
  WP_THEME_PATH: web/app/themes/wlc-starter

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .yarn
    - web/app/themes/wlc-starter/node_modules
    - vendor/


#####################################
# BEFORE_SCRIPTS (anchors only) #####
#####################################


.init_ssh: &ssh_set_up_commands_only 
  before_script:
  # SSH
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval $(ssh-agent -s)
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - ssh-add <(echo "$STAGING_PRIVATE_KEY")
  # Allow deploy script to execute
  - chmod +x ./deploy.sh

.init_build: &before_script_init_build 
  before_script:
  # Updates
  - curl -sL https://deb.nodesource.com/setup_12.x | bash
  - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
  - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
  - apt-get update
  - apt-get -y install yarn
  - yarn -v
  - apt-get -y install libpcre3-dev zlib1g-dev libbz2-dev libpng-dev libjpeg-dev nodejs git zip unzip curl rsync mariadb-client gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
  - docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr
  - docker-php-ext-install zip bz2 gd mysqli pdo pdo_mysql

  # Composer
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php -r "copy('https://composer.github.io/installer.sig', 'composer-setup.sig');"
  - php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('composer-setup.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
  - php composer-setup.php --install-dir=/usr/local/bin --filename=composer
  - php -r "unlink('composer-setup.php');"
  - php -r "unlink('composer-setup.sig');"

  # Install Node / Yarn
  #- npm -g install yarn (already available with the docker image)
  - npm rebuild node-sass --force

  # SSH
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval $(ssh-agent -s)
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - ssh-add <(echo "$STAGING_PRIVATE_KEY")
  # Allow deploy script to execute
  - chmod +x ./deploy.sh

######################
# DEVELOP ############
######################

build_dev:
  stage: build
   
  tags:
    - docker
  only:
    - master
  environment:
    name: develop
    url: http://pfr-klimaton.devel6.3a.pl
  artifacts:
    paths:
      - develop_DEPLOY_TMP.zip
    expire_in: 2 hrs
  <<: *before_script_init_build
  script:
    - composer install --no-ansi --no-dev --no-interaction --optimize-autoloader --no-progress --no-cache
    - cd ${WP_THEME_PATH}
    - composer install --no-ansi --no-dev --no-interaction --optimize-autoloader --no-progress --no-cache
    - yarn --cache-folder ${CI_PROJECT_DIR}/.yarn
    - yarn build
    - cd $CI_PROJECT_DIR
    - echo "ZIP our deploy folder - skipping non-production files/folders!"
    # skip .cache-loader also or do we need it? make sure to skip hidden files, especially .git etc (huge!)
    # the main problem are huge .git folders in our premium composer packages (WP plugins) that come via cloning. They SHOULD NOT be zipped
    - zip -q -r ${ZIP_TEMP_FOLDER_NAME}.zip . -x '*.git*' -x '*node_modules*' -x '.*' -x '.*/.*' -x '*.DS_Store' -x '*.sql' -x '*wp-content/themes/twenty*' -x '*app/uploads/*' -x '*.lock'

deploy_dev:
  stage: deploy
  cache: {}
  only:
    - master
  tags:
    - docker
  environment:
    name: develop
    url: http://pfr-klimaton.devel6.3a.pl
  dependencies:
    - build_dev
  before_script: 
  <<: *ssh_set_up_commands_only
  script:
    - cd $CI_PROJECT_DIR
    - echo "##### => TRANSFER ${ZIP_TEMP_FOLDER_NAME}.zip to ${SERVER}:${SERVER_ROOT_WHERE_DEPLOY_FOLDER_DEV}"
    - scp -P ${PORT} ${ZIP_TEMP_FOLDER_NAME}.zip ${SERVER}:${SERVER_ROOT_WHERE_DEPLOY_FOLDER_DEV}
    - set +e
    - echo "##### => RUN DEPLOY SCRIPT"
    - ./deploy.sh -z ${ZIP_TEMP_FOLDER_NAME} -s ${SERVER} -p ${PORT} -r "${SERVER_ROOT_WHERE_DEPLOY_FOLDER_DEV}" -n ${SERVER_FOLDER_NAME_DEV} -t ${WP_THEME_PATH}
